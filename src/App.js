import React, { useState, useEffect, useRef } from "react";
import Chart from "chart.js";
import axios from "axios";

async function getBook() {
  try {
    // variables
    let lPoints = [];
    let sPoints = [];

    const { data } = await axios.get(
      `https://api-pub.bitfinex.com/v2/book/tBTCUSD/P2?len=100`
    );

    const lBook = data.slice(0, 100);
    const sBook = data.slice(100);

    for await (const order of lBook) {
      const [price, _, amount] = await order;
      const pAmount = (await lPoints[lPoints.length - 1])
        ? lPoints[lPoints.length - 1].y
        : 0; // previous amount
      lPoints.push({
        x: price,
        y: amount + pAmount
      });
    }

    for await (const order of sBook) {
      const [price, _, amount] = await order;
      const pAmount = (await sPoints[sPoints.length - 1])
        ? sPoints[sPoints.length - 1].y
        : 0;
      sPoints.push({
        x: price,
        y: amount * -1 + pAmount
      });
    }
  } catch (error) {
    console.error(error);
  }
}

function useInterval(callback, delay) {
  const savedCallback = useRef();

  // Remember the latest callback.
  useEffect(
    () => {
      savedCallback.current = callback;
    },
    [callback]
  );

  // Set up the interval.
  useEffect(
    () => {
      function tick() {
        savedCallback.current();
      }
      if (delay !== null) {
        let id = setInterval(tick, delay);
        return () => clearInterval(id);
      }
    },
    [delay]
  );
}

function App() {
  const [lBook, setLBook] = useState([
    { x: 9550, y: 0.08795583 },
    { x: 9540, y: 10.68755832 },
    { x: 9530, y: 29.56206954 },
    { x: 9520, y: 48.429409910000004 },
    { x: 9510, y: 79.39871023 },
    { x: 9500, y: 112.20222316 },
    { x: 9490, y: 116.38796057 },
    { x: 9480, y: 150.64730775 },
    { x: 9470, y: 157.64416589 },
    { x: 9460, y: 197.95406115 },
    { x: 9450, y: 286.78664724 },
    { x: 9440, y: 308.94102446 },
    { x: 9430, y: 316.1728089 },
    { x: 9420, y: 354.11272914 },
    { x: 9410, y: 355.95017955 },
    { x: 9400, y: 361.73180957 },
    { x: 9390, y: 381.83691434 },
    { x: 9380, y: 386.92935842 },
    { x: 9370, y: 411.49035187000004 },
    { x: 9360, y: 414.44351089 },
    { x: 9350, y: 454.25014169 },
    { x: 9340, y: 462.98094507 },
    { x: 9330, y: 506.72279580000003 },
    { x: 9320, y: 513.29240078 },
    { x: 9310, y: 530.89684213 },
    { x: 9300, y: 605.74633151 },
    { x: 9290, y: 639.27950595 },
    { x: 9280, y: 650.3754799300001 },
    { x: 9270, y: 669.4872968400001 },
    { x: 9260, y: 686.8488413900001 },
    { x: 9250, y: 723.27437267 },
    { x: 9240, y: 727.89779505 },
    { x: 9230, y: 730.95915309 },
    { x: 9220, y: 739.59041359 },
    { x: 9210, y: 755.65020299 },
    { x: 9200, y: 848.02638301 },
    { x: 9190, y: 873.78473991 },
    { x: 9180, y: 888.394356 },
    { x: 9170, y: 921.9107962100001 },
    { x: 9160, y: 968.55984191 },
    { x: 9150, y: 1017.8303408700001 },
    { x: 9140, y: 1020.4464170200001 },
    { x: 9130, y: 1028.60305345 },
    { x: 9120, y: 1058.8819454 },
    { x: 9110, y: 1092.76036643 },
    { x: 9100, y: 1144.4936231899999 },
    { x: 9090, y: 1148.55089159 },
    { x: 9080, y: 1153.0547865199999 },
    { x: 9070, y: 1162.5677600299998 },
    { x: 9060, y: 1183.9294562899997 },
    { x: 9050, y: 1434.3802561899997 },
    { x: 9040, y: 1446.9352811899998 },
    { x: 9030, y: 1457.47678841 },
    { x: 9020, y: 1488.1929747099998 },
    { x: 9010, y: 1518.95841364 },
    { x: 9000, y: 1884.083547 },
    { x: 8990, y: 1899.1362811 },
    { x: 8980, y: 1911.6174488699999 },
    { x: 8970, y: 1935.7397130099998 },
    { x: 8960, y: 1944.2019017799998 },
    { x: 8950, y: 1951.9423421299998 },
    { x: 8940, y: 1954.9062426899998 },
    { x: 8930, y: 1960.0053394299998 },
    { x: 8920, y: 1968.0851711299997 },
    { x: 8910, y: 1975.7297075399997 },
    { x: 8900, y: 2020.5889446999997 },
    { x: 8890, y: 2027.5173830699998 },
    { x: 8880, y: 2053.26168088 },
    { x: 8870, y: 2117.50632526 },
    { x: 8860, y: 2139.6588558999997 },
    { x: 8850, y: 2151.04313982 },
    { x: 8840, y: 2156.45518483 },
    { x: 8830, y: 2165.1752518999997 },
    { x: 8820, y: 2175.0493469699995 },
    { x: 8810, y: 2192.2254149099995 },
    { x: 8800, y: 2280.2532272199996 },
    { x: 8790, y: 2285.2391624399997 },
    { x: 8780, y: 2291.2331134499996 },
    { x: 8770, y: 2296.6858542399996 },
    { x: 8760, y: 2309.8438911999997 },
    { x: 8750, y: 2358.1593615799998 },
    { x: 8740, y: 2361.0100841 },
    { x: 8730, y: 2390.53682015 },
    { x: 8720, y: 2396.28397919 },
    { x: 8710, y: 2407.56668471 },
    { x: 8700, y: 2455.07206438 },
    { x: 8690, y: 2466.12555659 },
    { x: 8680, y: 2470.77252917 },
    { x: 8670, y: 2474.20524034 },
    { x: 8660, y: 2483.9318861399997 },
    { x: 8650, y: 2520.43688094 },
    { x: 8640, y: 2583.0803490499998 },
    { x: 8630, y: 2672.20703492 },
    { x: 8620, y: 2906.45358355 },
    { x: 8610, y: 2996.13507506 },
    { x: 8600, y: 3303.9673273099997 },
    { x: 8590, y: 3351.7192130699996 },
    { x: 8580, y: 3355.6141809099995 },
    { x: 8570, y: 3460.1278525799994 },
    { x: 8560, y: 3669.8458533399994 }
  ]);
  const [sBook, setSBook] = useState([
    { x: 9560, y: 18.57596168 },
    { x: 9570, y: 34.358109909999996 },
    { x: 9580, y: 57.71961768999999 },
    { x: 9590, y: 65.08992439 },
    { x: 9600, y: 84.13103089999998 },
    { x: 9610, y: 90.57635193999998 },
    { x: 9620, y: 102.49638941999999 },
    { x: 9630, y: 104.11769367999999 },
    { x: 9640, y: 111.95528675999999 },
    { x: 9650, y: 207.17101244999998 },
    { x: 9660, y: 235.94007107 },
    { x: 9670, y: 239.9951985 },
    { x: 9680, y: 301.2612142 },
    { x: 9690, y: 313.22642328 },
    { x: 9700, y: 314.381827 },
    { x: 9710, y: 314.47370918 },
    { x: 9720, y: 320.36330593 },
    { x: 9730, y: 323.25959873000005 },
    { x: 9740, y: 324.45634981000006 },
    { x: 9750, y: 379.96072381000005 },
    { x: 9760, y: 383.54214070000006 },
    { x: 9770, y: 391.45057204000005 },
    { x: 9780, y: 444.97005200000007 },
    { x: 9790, y: 451.3493827000001 },
    { x: 9800, y: 462.7588673900001 },
    { x: 9810, y: 468.1203771800001 },
    { x: 9820, y: 472.4163461300001 },
    { x: 9830, y: 479.98878786000006 },
    { x: 9840, y: 491.76727386000005 },
    { x: 9850, y: 555.12602195 },
    { x: 9860, y: 574.53367509 },
    { x: 9870, y: 583.82110367 },
    { x: 9880, y: 600.80898536 },
    { x: 9890, y: 617.86961907 },
    { x: 9900, y: 636.08336884 },
    { x: 9910, y: 646.83193411 },
    { x: 9920, y: 682.79585754 },
    { x: 9930, y: 696.7401669200001 },
    { x: 9940, y: 723.0386474200001 },
    { x: 9950, y: 738.86994474 },
    { x: 9960, y: 808.8007091200001 },
    { x: 9970, y: 846.9750252900001 },
    { x: 9980, y: 861.07636932 },
    { x: 9990, y: 899.92181513 },
    { x: 10000, y: 908.64977675 },
    { x: 10100, y: 1074.98769994 },
    { x: 10200, y: 1118.6365244200001 },
    { x: 10300, y: 1190.3028980600002 },
    { x: 10400, y: 1275.1203040100002 },
    { x: 10500, y: 1557.00209302 },
    { x: 10600, y: 1592.74082554 },
    { x: 10700, y: 1735.93004362 },
    { x: 10800, y: 1815.61453254 },
    { x: 10900, y: 1995.83648771 },
    { x: 11000, y: 2050.49609134 },
    { x: 11100, y: 2154.17365565 },
    { x: 11200, y: 2300.14356722 },
    { x: 11300, y: 2377.28697507 },
    { x: 11400, y: 2436.95981848 },
    { x: 11500, y: 2483.69894105 },
    { x: 11600, y: 2525.48702564 },
    { x: 11700, y: 2554.04809867 },
    { x: 11800, y: 2617.45198272 },
    { x: 11900, y: 2798.77089057 },
    { x: 12000, y: 3256.7574193200003 },
    { x: 12100, y: 3386.67874315 },
    { x: 12200, y: 3463.1064557500004 },
    { x: 12300, y: 3671.8436420400003 },
    { x: 12400, y: 3730.3206245200004 },
    { x: 12500, y: 3963.91991115 },
    { x: 12600, y: 3991.9770348800002 },
    { x: 12700, y: 4127.87523014 },
    { x: 12800, y: 4282.93383973 },
    { x: 12900, y: 4593.56170684 },
    { x: 13000, y: 5000.56823128 },
    { x: 13100, y: 5270.53853446 },
    { x: 13200, y: 5445.19486699 },
    { x: 13300, y: 5684.3680646600005 },
    { x: 13400, y: 5820.7780236300005 },
    { x: 13500, y: 6086.343345210001 },
    { x: 13600, y: 6430.965565660001 },
    { x: 13700, y: 6705.711515420001 },
    { x: 13800, y: 7058.054058830001 },
    { x: 13900, y: 7401.8282696900005 },
    { x: 14000, y: 7700.407345400001 },
    { x: 14100, y: 7704.812515760001 },
    { x: 14200, y: 7725.915548010001 },
    { x: 14300, y: 7731.070159870001 },
    { x: 14400, y: 7739.30129963 },
    { x: 14500, y: 7751.03868638 },
    { x: 14600, y: 7759.59826641 },
    { x: 14700, y: 7763.62281821 },
    { x: 14800, y: 7771.4179395 },
    { x: 14900, y: 7783.06425383 },
    { x: 15000, y: 7833.18775052 },
    { x: 15100, y: 7839.67273215 },
    { x: 15200, y: 7846.694189010001 },
    { x: 15300, y: 7856.321868530001 },
    { x: 15400, y: 7868.57598792 },
    { x: 15500, y: 7879.017722160001 }
  ]);

  useEffect(
    () => {
      var ctx = document.getElementById("myChart").getContext("2d");
      var myChart = new Chart(ctx, {
        type: "line",
        data: {
          datasets: [
            {
              steppedLine: true,
              label: "Longs",
              data: lBook,
              backgroundColor: "#a9dd9d",
              pointBackgroundColor: "#54734d"
            },
            {
              steppedLine: true,
              label: "Shorts",
              data: sBook,
              backgroundColor: "#fd8489",
              pointBackgroundColor: "#6e383a"
            }
          ]
        },
        options: {
          scales: {
            yAxes: [
              {
                type: "linear",
                scaleLabel: {
                  display: true,
                  labelString: "Volume"
                }
              }
            ],
            xAxes: [
              {
                type: "linear",
                scaleLabel: {
                  display: true,
                  labelString: "Price"
                }
              }
            ]
          }
        }
      });
    },
    [lBook]
  );

  useInterval(() => {
    // Your custom logic here
    async function updateState() {
      try {
        const { lb, sb } = await getBook();
        setLBook(lb);
        setSBook(sb);
      } catch (error) {
        console.log(error);
      }
    }
    updateState();
  }, 10000);

  return (
    <>
      <canvas id="myChart" width="50%" height="50%" />
    </>
  );
}

export default App;
